{"version":3,"file":"static/webpack/static/development/pages/dragon/[id].js.c2c25e693c271774ddc2.hot-update.js","sources":["webpack:///./pages/dragon/.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Router, {useRouter} from 'next/router';\n\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Grid from '@material-ui/core/Grid';\n\nimport _uniq from 'lodash/uniq';\n\nimport { fetchGeneSaga } from '../../redux/store';\nimport Root from '../../components/Root';\nimport DragonCell from '../../components/DragonCell';\n\nconst useStyles = makeStyles(theme => ({\n  upper: {\n    marginTop: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputCont: {\n    display: 'flex'\n  },\n  input: {\n    flex: 1,\n    padding: '0 3px 0 10px'\n  },\n  dragons: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  cell: {\n    margin: '0 15px'\n  }\n}));\n\nfunction jumpTo(query) {\n  const url = `${process.env.BACKEND_URL}/dragon/[id]`;\n  const as = `${process.env.BACKEND_URL}/dragon/${query}`;\n  Router.push(url, as, {shallow: true});\n}\n\nfunction useDragonId() {\n  const {query} = useRouter();\n  if (query && query.id) {\n    return parseInt(query.id);\n  }\n  return '';\n}\n\nlet Index = ({\n  dispatchGeneFetch,\n  pinnedDragons = [],\n  genes = {},\n  web3,\n  refetch\n}) => {\n  const classes = useStyles();\n  const initDragon = useDragonId();\n  const [dragonId, setDragonId] = useState(initDragon);\n  const [_r] = useState(new Date().getTime());\n  // console.log(`${_r}#${initDragon}`);\n  useEffect(() => {\n    if (web3 && initDragon) {\n      dispatchGeneFetch(initDragon);\n    }\n  }, [_r, web3, initDragon]);\n\n  const dragons = _uniq([...pinnedDragons, initDragon]);\n\n  return (\n    <Root>\n      <Grid container className={classes.upper}>\n        <Grid item xs={12} sm={12} md={6} lg={4} >\n          <Paper className={classes.inputCont} elevation={1}>\n            <InputBase className={classes.input} placeholder={'dragon id #'}\n              value={dragonId}\n              spellCheck={false}\n              onChange={e => setDragonId(e.target.value)}\n              onKeyDown={event => {\n                if (event.key === 'Enter') {\n                  jumpTo(dragonId);\n                }\n              }}\n              />\n            <IconButton className={classes.iconButton} aria-label={'Search'} onClick={e => jumpTo(dragonId)}>\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container className={classes.dragons}>\n        {\n          dragons.map(dragon => {\n            const isPin = !!~pinnedDragons.indexOf(dragon);\n            return (\n              <Grid item xs={12} sm={12} md={6} lg={4} key={dragon} className={classes.cell}>\n                <DragonCell genes={genes} id={dragon}\n                  isPin={isPin}\n                  />\n              </Grid>\n            );\n          })\n        }\n      </Grid>\n    </Root>\n  );\n};\n\nIndex = connect(\n  ({genes, web3, pinnedDragons}) => ({genes, web3, pinnedDragons}),\n  (dispatch) => ({\n    dispatchGeneFetch: bindActionCreators(fetchGeneSaga, dispatch)\n  })\n)(Index);\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAlBA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAKA;;;;A","sourceRoot":""}