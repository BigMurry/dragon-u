{"version":3,"file":"static/webpack/static/development/pages/index.js.6f2b85355189b85b8299.hot-update.js","sources":["webpack:///./components/Web3Provider.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport * as ethers from 'ethers';\nimport _get from 'lodash/get';\n\nconst globalStore = {\n  rawWeb3: null,\n  web3: null,\n  jsonRpcUrl: null,\n  jsonRpc: null\n};\n\nfunction denyMetamask() {\n  const expire = window.localStorage.getItem('metamask-deny');\n  return new Date(expire) > new Date();\n}\n\nfunction setDenyMetamask() {\n  let d = new Date();\n  d.setHours(d.getHours() - 12);\n  window.localStorage.setItem('metamask-deny', d);\n}\n\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md\n// https://github.com/MetaMask/metamask-extension/issues/5715\nlet enabled = false;\nexport async function tryEnableWeb3(forceEnable) {\n  try {\n    if (\n      window &&\n      window.ethereum &&\n      (forceEnable || (!enabled && !denyMetamask()))\n    ) {\n      if (window.ethereum.enable) {\n        await window.ethereum.enable();\n        enabled = true;\n      } else if (window.ethereum.sendAsync) {\n        const accounts = await window.ethereum.sendAsync('eth_requestAccounts');\n        if (accounts && accounts.length > 0) {\n          enabled = true;\n        }\n      } else {\n        const accounts = await window.ethereum.send('eth_requestAccounts');\n        if (accounts && accounts.length > 0) {\n          enabled = true;\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n    setDenyMetamask();\n    enabled = false;\n  }\n  return enabled;\n}\n\nfunction setProvider(jsonRpcUrl) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n  const current = _get(window, ['ethereum'], _get(window, ['web3', 'currentProvider'], null));\n\n  // create browser web3 provider\n  if (!globalStore.web3 && current && current !== globalStore.rawWeb3) {\n    globalStore.web3 = new ethers.providers.Web3Provider(current);\n  }\n\n  // set web3 raw provider\n  globalStore.rawWeb3 = current;\n\n  // create JsonRpc web3 provider\n  if (!globalStore.jsonRpc && jsonRpcUrl && jsonRpcUrl !== globalStore.jsonRpcUrl) {\n    globalStore.jsonRpc = new ethers.providers.JsonRpcProvider(jsonRpcUrl);\n  }\n\n  globalStore.jsonRpcUrl = jsonRpcUrl;\n}\n\nfunction getProvider() {\n  return globalStore.web3 || globalStore.jsonRpc;\n}\n\nasync function activeProvider(networks = [1, 3, 4, 5], backupJsonRpcUrl) {\n  setProvider(backupJsonRpcUrl);\n  const provd = getProvider();\n  let ok = false;\n  if (provd) {\n    ok = true;\n    const network = parseInt(await provd.getNetwork(), 10);\n    if (~networks.indexOf(network)) {\n      ok = await tryEnableWeb3();\n    }\n  }\n  return ok;\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve('schedule'), ms);\n  });\n}\n\nfunction retry(fn, times, delay) {\n  return async (...args) => {\n    let tried = 0;\n    let ok = false;\n    let err;\n    while (tried <= times) {\n      try {\n        ok = await fn(...args);\n        if (ok) {\n          break;\n        }\n      } catch (e) {\n        ok = false;\n        err = e;\n      }\n      ++tried;\n      await sleep(delay);\n    }\n    return {ok, err};\n  };\n}\n\nconst Web3Context = React.createContext();\nconst retryActiveProvider = retry(activeProvider, 5, 1000);\n\nexport const Web3Provider = function({networks, backupJsonRpcUrl, ms, children}) {\n  const [provider, setProvider] = useState(null);\n  const updateProvider = async () => {\n    await retryActiveProvider(networks, backupJsonRpcUrl);\n    const currentProvider = getProvider();\n    if (currentProvider && currentProvider !== provider) {\n      setProvider(currentProvider);\n    }\n  };\n  useEffect(() => {\n    let interval;\n    updateProvider().then(() => {\n      let running = false;\n      interval = setInterval(() => {\n        if (!running) {\n          running = true;\n          updateProvider().then(() => {\n            running = false;\n          });\n        }\n      }, ms);\n    });\n    return () => {\n      clearInterval(interval);\n    };\n  }, [networks, backupJsonRpcUrl]);\n  return (\n    <Web3Context.Provider value={provider}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\nexport function useWeb3Provider() {\n  return React.useContext(Web3Context);\n}\n\nexport function useAccount() {\n  const provider = useWeb3Provider();\n  const [account, setAccount] = useState();\n  useEffect(() => {\n    if (provider) {\n      const signer = provider.getSigner();\n      signer.getAddress().then(add => {\n        if (add && add !== '0x0000000000000000000000000000000000000000') {\n          setAccount(add);\n        }\n      });\n    }\n  }, [provider]);\n  return account;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AAAA;AAAA;AACA;;;;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAfA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAuBA;AACA;AACA;AACA;AA1BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA8BA;AACA,eAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAIA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAcA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AACA;AAbA;AAcA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAiBA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}